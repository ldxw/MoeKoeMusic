name: Push Multi-Arch Docker Images

on:
  workflow_dispatch:
    inputs:
      version:
        description: "镜像版本号 (默认: v1.4.7)"
        required: false
        default: "v1.4.7"

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    name: Build and Push Multi-Platform Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set version and image tags
        id: vars
        run: |
          VERSION=${{ github.event.inputs.version || 'v1.4.7' }}
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "TAG_DH_LATEST=ldxw/moekoe-music:latest" >> $GITHUB_OUTPUT
          echo "TAG_DH_VERSION=ldxw/moekoe-music:$VERSION" >> $GITHUB_OUTPUT
          echo "TAG_GHCR_LATEST=ghcr.io/$OWNER/moekoe-music:latest" >> $GITHUB_OUTPUT
          echo "TAG_GHCR_VERSION=ghcr.io/$OWNER/moekoe-music:$VERSION" >> $GITHUB_OUTPUT

      - name: Set up QEMU (for ARM emulation)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Multi-Arch Image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.vars.outputs.TAG_DH_LATEST }}
            ${{ steps.vars.outputs.TAG_DH_VERSION }}
            ${{ steps.vars.outputs.TAG_GHCR_LATEST }}
            ${{ steps.vars.outputs.TAG_GHCR_VERSION }}
